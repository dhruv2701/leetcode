/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void pathSum(TreeNode *root, int targetSum, vector<int> &vect, vector<vector<int>> &ans)
    {
        
        if(root==NULL)
            return;
        
        vect.push_back(root->val);
        
        if(root->left==NULL && root->right==NULL && targetSum==root->val)
            ans.push_back(vect);
            
        pathSum(root->left, targetSum-(root->val), vect, ans);
        pathSum(root->right, targetSum-(root->val), vect, ans);
        
        vect.pop_back();
    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<int> vect;
        vector<vector<int>> ans;
        pathSum(root, targetSum, vect, ans);
        return ans;
    }
};
